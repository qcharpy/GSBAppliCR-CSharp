//------------------------------------------------------------------------------
// <auto-generated>
//    Ce code a été généré à partir d'un modèle.
//
//    Des modifications manuelles apportées à ce fichier peuvent conduire à un comportement inattendu de votre application.
//    Les modifications manuelles apportées à ce fichier sont remplacées si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GSBCR.modele
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class GSB_visite_LEGUILLIEREntities : DbContext
    {
        public GSB_visite_LEGUILLIEREntities()
            : base("name=GSB_visite_LEGUILLIEREntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<FAMILLE> FAMILLE { get; set; }
        public DbSet<MEDICAMENT> MEDICAMENT { get; set; }
        public DbSet<MOTIF_VISITE> MOTIF_VISITE { get; set; }
        public DbSet<OFFRIR> OFFRIR { get; set; }
        public DbSet<POSSEDER> POSSEDER { get; set; }
        public DbSet<PRATICIEN> PRATICIEN { get; set; }
        public DbSet<RAPPORT_VISITE> RAPPORT_VISITE { get; set; }
        public DbSet<REGION> REGION { get; set; }
        public DbSet<SECTEUR> SECTEUR { get; set; }
        public DbSet<SPECIALITE> SPECIALITE { get; set; }
        public DbSet<TRAVAILLER> TRAVAILLER { get; set; }
        public DbSet<TYPE_PRATICIEN> TYPE_PRATICIEN { get; set; }
        public DbSet<VISITEUR> VISITEUR { get; set; }
        public DbSet<VAFFECTATION> VAFFECTATION { get; set; }
    
        public virtual ObjectResult<Nullable<int>> addRapport(string pMat, Nullable<short> pPranum, Nullable<System.DateTime> pDateVisite, string pEtat, string pConf, string pBilan, string pMotif, string pAutre, string pNomR, string pPrenomR, string pMed1, string pMed2)
        {
            var pMatParameter = pMat != null ?
                new ObjectParameter("pMat", pMat) :
                new ObjectParameter("pMat", typeof(string));
    
            var pPranumParameter = pPranum.HasValue ?
                new ObjectParameter("pPranum", pPranum) :
                new ObjectParameter("pPranum", typeof(short));
    
            var pDateVisiteParameter = pDateVisite.HasValue ?
                new ObjectParameter("pDateVisite", pDateVisite) :
                new ObjectParameter("pDateVisite", typeof(System.DateTime));
    
            var pEtatParameter = pEtat != null ?
                new ObjectParameter("pEtat", pEtat) :
                new ObjectParameter("pEtat", typeof(string));
    
            var pConfParameter = pConf != null ?
                new ObjectParameter("pConf", pConf) :
                new ObjectParameter("pConf", typeof(string));
    
            var pBilanParameter = pBilan != null ?
                new ObjectParameter("pBilan", pBilan) :
                new ObjectParameter("pBilan", typeof(string));
    
            var pMotifParameter = pMotif != null ?
                new ObjectParameter("pMotif", pMotif) :
                new ObjectParameter("pMotif", typeof(string));
    
            var pAutreParameter = pAutre != null ?
                new ObjectParameter("pAutre", pAutre) :
                new ObjectParameter("pAutre", typeof(string));
    
            var pNomRParameter = pNomR != null ?
                new ObjectParameter("pNomR", pNomR) :
                new ObjectParameter("pNomR", typeof(string));
    
            var pPrenomRParameter = pPrenomR != null ?
                new ObjectParameter("pPrenomR", pPrenomR) :
                new ObjectParameter("pPrenomR", typeof(string));
    
            var pMed1Parameter = pMed1 != null ?
                new ObjectParameter("pMed1", pMed1) :
                new ObjectParameter("pMed1", typeof(string));
    
            var pMed2Parameter = pMed2 != null ?
                new ObjectParameter("pMed2", pMed2) :
                new ObjectParameter("pMed2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("addRapport", pMatParameter, pPranumParameter, pDateVisiteParameter, pEtatParameter, pConfParameter, pBilanParameter, pMotifParameter, pAutreParameter, pNomRParameter, pPrenomRParameter, pMed1Parameter, pMed2Parameter);
        }
    
        public virtual int updRapport(string pMat, Nullable<int> pNum, Nullable<short> pPranum, Nullable<System.DateTime> pDateVisite, string pEtat, string pConf, string pBilan, string pMotif, string pAutre, string pNomR, string pPrenomR, string pMed1, string pMed2)
        {
            var pMatParameter = pMat != null ?
                new ObjectParameter("pMat", pMat) :
                new ObjectParameter("pMat", typeof(string));
    
            var pNumParameter = pNum.HasValue ?
                new ObjectParameter("pNum", pNum) :
                new ObjectParameter("pNum", typeof(int));
    
            var pPranumParameter = pPranum.HasValue ?
                new ObjectParameter("pPranum", pPranum) :
                new ObjectParameter("pPranum", typeof(short));
    
            var pDateVisiteParameter = pDateVisite.HasValue ?
                new ObjectParameter("pDateVisite", pDateVisite) :
                new ObjectParameter("pDateVisite", typeof(System.DateTime));
    
            var pEtatParameter = pEtat != null ?
                new ObjectParameter("pEtat", pEtat) :
                new ObjectParameter("pEtat", typeof(string));
    
            var pConfParameter = pConf != null ?
                new ObjectParameter("pConf", pConf) :
                new ObjectParameter("pConf", typeof(string));
    
            var pBilanParameter = pBilan != null ?
                new ObjectParameter("pBilan", pBilan) :
                new ObjectParameter("pBilan", typeof(string));
    
            var pMotifParameter = pMotif != null ?
                new ObjectParameter("pMotif", pMotif) :
                new ObjectParameter("pMotif", typeof(string));
    
            var pAutreParameter = pAutre != null ?
                new ObjectParameter("pAutre", pAutre) :
                new ObjectParameter("pAutre", typeof(string));
    
            var pNomRParameter = pNomR != null ?
                new ObjectParameter("pNomR", pNomR) :
                new ObjectParameter("pNomR", typeof(string));
    
            var pPrenomRParameter = pPrenomR != null ?
                new ObjectParameter("pPrenomR", pPrenomR) :
                new ObjectParameter("pPrenomR", typeof(string));
    
            var pMed1Parameter = pMed1 != null ?
                new ObjectParameter("pMed1", pMed1) :
                new ObjectParameter("pMed1", typeof(string));
    
            var pMed2Parameter = pMed2 != null ?
                new ObjectParameter("pMed2", pMed2) :
                new ObjectParameter("pMed2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updRapport", pMatParameter, pNumParameter, pPranumParameter, pDateVisiteParameter, pEtatParameter, pConfParameter, pBilanParameter, pMotifParameter, pAutreParameter, pNomRParameter, pPrenomRParameter, pMed1Parameter, pMed2Parameter);
        }
    }
}
